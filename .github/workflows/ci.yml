name: CI & Publish to PyPI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  release:
    types: [created]  # Only publishes when a GitHub Release is created

jobs:
  build-test:
    name: Build & Test
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install Poetry
      run: |
        curl -sSL https://install.python-poetry.org | python3 -
        echo "$HOME/.local/bin" >> $GITHUB_PATH

    - name: Configure Poetry
      run: poetry config virtualenvs.create false

    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pypoetry
        key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
        restore-keys: |
          ${{ runner.os }}-poetry-

    - name: Install dependencies
      run: poetry install --no-interaction --no-root

    - name: Run tests (optional)
      run: poetry run pytest
      if: success() && hashFiles('tests/**') != ''

  publish:
    name: Publish to PyPI
    needs: build-test
    runs-on: ubuntu-latest
    if: github.event_name == 'release'

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install Poetry
      run: |
        curl -sSL https://install.python-poetry.org | python3 -
        echo "$HOME/.local/bin" >> $GITHUB_PATH

    - name: Configure Poetry
      run: poetry config virtualenvs.create false

    - name: Install dependencies
      run: poetry install --no-interaction --no-root

    - name: Build the package
      run: poetry build

    - name: Publish to PyPI
      run: poetry publish --username __token__ --password ${{ secrets.PYPI_TOKEN }}

name: CI 
on: [push, pull_request]

jobs:
  build-test:
    name: Build & Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: 1.7.1
        virtualenvs-create: true
        virtualenvs-in-project: true
    
    - name: Cache dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/pypoetry
        key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
        restore-keys: |
          ${{ runner.os }}-poetry-
    
    - name: Install dependencies
      run: poetry install --no-interaction
    
    - name: Run Ruff linter
      run: |
        # First run: auto-fix issues where possible
        poetry run ruff check --fix .
        # Second run: fail if there are still issues
        poetry run ruff check .
    
    - name: Run tests with coverage
      if: success()
      run: poetry run pytest --cov=src --cov-report=term --cov-report=xml --tb=short --disable-warnings

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        files: coverage.xml
    
